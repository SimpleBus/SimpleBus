services:
    SimpleBus\AsynchronousBundle\Bus\AsynchronousEventBus:
        alias: simple_bus.asynchronous.event_bus

    asynchronous_event_bus:
        alias: simple_bus.asynchronous.event_bus
        public: true

    simple_bus.asynchronous.event_bus:
        class: SimpleBus\AsynchronousBundle\Bus\AsynchronousEventBus
        public: false
        tags:
            - { name: message_bus, type: event, middleware_tag: asynchronous_event_bus_middleware }

    simple_bus.asynchronous.always_publishes_messages_middleware:
        class: SimpleBus\Asynchronous\MessageBus\AlwaysPublishesMessages
        public: false
        arguments:
            - '@simple_bus.asynchronous.event_publisher'

    simple_bus.asynchronous.publishes_predefined_messages_middleware:
        class: SimpleBus\Asynchronous\MessageBus\PublishesPredefinedMessages
        public: false
        arguments:
            - '@simple_bus.asynchronous.event_publisher'
            - '@simple_bus.event_bus.event_name_resolver'
            - []

    simple_bus.asynchronous.event_bus.finishes_message_before_handling_next_middleware:
        class: SimpleBus\Message\Bus\Middleware\FinishesHandlingMessageBeforeHandlingNext
        public: false
        tags:
            - { name: asynchronous_event_bus_middleware, priority: 1000 }

    simple_bus.asynchronous.event_bus.notifies_message_subscribers_middleware:
        class: SimpleBus\Message\Subscriber\NotifiesMessageSubscribersMiddleware
        public: false
        arguments:
            - '@simple_bus.asynchronous.event_bus.event_subscribers_resolver'
        tags:
            - { name: asynchronous_event_bus_middleware, priority: -1000 }

    simple_bus.asynchronous.event_bus.callable_resolver:
        class: SimpleBus\Message\CallableResolver\ServiceLocatorAwareCallableResolver
        public: false
        arguments:
            - ['@simple_bus.asynchronous.event_bus.event_subscribers_service_locator', 'get']

    simple_bus.asynchronous.event_bus.event_subscribers_service_locator:
        class: Symfony\Component\DependencyInjection\ServiceLocator
        tags: ['container.service_locator']
        arguments:
            # collection of command handler service ids, will be provided by the RegisterHandlers compiler pass
            - []

    simple_bus.asynchronous.event_bus.event_subscribers_collection:
        class: SimpleBus\Message\CallableResolver\CallableCollection
        public: false
        arguments:
            # collection of event subscriber services ids, will be provided by the RegisterSubscribers compiler pas
            - []
            - '@simple_bus.asynchronous.event_bus.callable_resolver'

    simple_bus.asynchronous.event_bus.event_subscribers_resolver:
        class: SimpleBus\Message\Subscriber\Resolver\NameBasedMessageSubscriberResolver
        public: false
        arguments:
            - '@simple_bus.asynchronous.event_bus.event_name_resolver'
            - '@simple_bus.asynchronous.event_bus.event_subscribers_collection'

    simple_bus.asynchronous.standard_serialized_event_envelope_consumer:
        class: SimpleBus\Asynchronous\Consumer\StandardSerializedEnvelopeConsumer
        public: false
        arguments:
            - '@simple_bus.asynchronous.message_serializer'
            - '@simple_bus.asynchronous.event_bus'
