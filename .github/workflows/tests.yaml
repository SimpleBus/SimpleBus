name: Tests

on: [ push ]

env:
    COMPOSER_ROOT_VERSION: "dev-main"

jobs:
    build-matrix:
        runs-on: ubuntu-20.04
        steps:
            -   uses: actions/checkout@v2
            -   uses: shivammathur/setup-php@v2
                with:
                    php-version: 7.4
                    coverage: none
                env:
                    COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            -   name: Install dependencies
                uses: ramsey/composer-install@1.2.0
            -   run: vendor/bin/monorepo-builder validate
            -   id: set-packages
                run: echo "::set-output name=packages::$(vendor/bin/monorepo-builder packages-json)"
            -   id: set-php-version
                run: echo "::set-output name=php-version::$(vendor/bin/easy-ci php-versions-json)"
        outputs:
            packages: ${{ steps.set-packages.outputs.packages }}
            php-version: ${{ steps.set-php-version.outputs.php-version }}

    tests:
        needs: build-matrix
        runs-on: ubuntu-20.04
        strategy:
            fail-fast: false
            matrix:
                php-version: ${{ fromJson(needs.build-matrix.outputs.php-version) }}
                package: ${{ fromJson(needs.build-matrix.outputs.packages) }}
                symfony-version:
                    - '4.4.*'
                    - '5.2.*'
                dependencies:
                    - 'lowest'
                    - 'highest'
                remove-dependencies: [ '' ]
                include:
                    -   php-version: '7.4'
                        package: 'symfony-bridge'
                        symfony-version: '5.2.*'
                        dependencies: 'lowest'
                        remove-dependencies: '--dev symfony/proxy-manager-bridge'
                exclude:
                    # Only test once it has no Symfony packages
                    -   package: 'asynchronous'
                        symfony-version: '4.4.*'
                    -   package: 'message-bus'
                        symfony-version: '4.4.*'
                    -   package: 'serialization'
                        symfony-version: '4.4.*'
                    # Exclude as it is not support on PHP 8
                    # https://github.com/php-amqplib/php-amqplib/issues/846
                    -   package: 'rabbitmq-bundle-bridge'
                        php-version: '8.0'
        steps:
            -   uses: actions/checkout@v2

            -   uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php-version }}
                    coverage: none
                env:
                    COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            -   if: "matrix.package == 'rabbitmq-bundle-bridge'"
                uses: getong/rabbitmq-action@v1.2
                with:
                    rabbitmq version: '3.8.9-management-alpine'
                    host port: 5672
                    rabbitmq user: 'guest'
                    rabbitmq password: 'guest'
                    rabbitmq vhost: '/'

            -   name: Install dependencies
                uses: ramsey/composer-install@1.2.0
            -   run: vendor/bin/monorepo-builder localize-composer-paths packages/${{ matrix.package }}/composer.json --ansi
            -   run: vendor/bin/monorepo-builder bump-interdependency dev-main

            -   run: bin/console rebuild-symfony-requirements ${{ matrix.package }} "${{ matrix.symfony-version }}"

            -   if: "matrix.remove-dependencies != ''"
                name: Remove dependencies
                run: composer --working-dir=packages/${{ matrix.package }} remove --no-update ${{ matrix.remove-dependencies }}

            -   name: Install dependencies
                uses: ramsey/composer-install@1.2.0
                with:
                    dependency-versions: ${{ matrix.dependencies }}
                    working-directory: packages/${{ matrix.package }}

            -   run: vendor/bin/phpunit
                working-directory: packages/${{ matrix.package }}

    php-cs-fixer:
        runs-on: ubuntu-20.04
        steps:
            -   uses: actions/checkout@v2
            -   uses: shivammathur/setup-php@v2
                with:
                    coverage: none
                    php-version: 8.0
                env:
                    COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            -   name: Install dependencies
                uses: ramsey/composer-install@1.2.0
            -   run: vendor/bin/php-cs-fixer fix --ansi --diff --dry-run

    phpstan:
        needs: build-matrix
        runs-on: ubuntu-20.04
        strategy:
            fail-fast: false
            matrix:
                php-version: ${{ fromJson(needs.build-matrix.outputs.php-version) }}
        steps:
            -   uses: actions/checkout@v2
            -   uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php-version }}
                    coverage: none
                env:
                    COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            -   name: Install dependencies
                uses: ramsey/composer-install@1.2.0
            -   run: vendor/bin/phpstan analyse --ansi
