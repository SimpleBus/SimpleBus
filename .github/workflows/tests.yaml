name: Tests

on: [ push ]

env:
    COMPOSER_ROOT_VERSION: "dev-master"

jobs:
    build-matrix:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2
            -   uses: shivammathur/setup-php@v2
                with:
                    php-version: 7.4
                    coverage: none
                env:
                    COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            -   run: composer install --no-progress --ansi
            -   run: vendor/bin/monorepo-builder validate
            -   id: set-packages
                run: echo "::set-output name=packages::$(vendor/bin/monorepo-builder packages-json)"
            -   id: set-php-version
                run: echo "::set-output name=php-version::$(vendor/bin/easy-ci php-versions-json)"
        outputs:
            packages: ${{ steps.set-packages.outputs.packages }}
            php-version: ${{ steps.set-php-version.outputs.php-version }}

    tests:
        needs: build-matrix
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                php-version: ${{ fromJson(needs.build-matrix.outputs.php-version) }}
                package: ${{ fromJson(needs.build-matrix.outputs.packages) }}
                symfony-version:
                    - '4.4.*'
                    - '5.2.*'
                dependencies:
                    - 'lowest'
                    - 'highest'
                composer-remove-arguments: ['']
                include:
                    - php-version: '8.0'
                      composer-update-arguments: '--ignore-platform-req php'
                    - php-version: '7.4'
                      symfony-version: '5.2.*'
                      package: 'symfony-bridge'
                      composer-remove-arguments: '--dev symfony/proxy-manager-bridge'
                exclude:
                    # Only test once it has no Symfony packages
                    - package: 'asynchronous'
                      symfony-version: '4.4.*'
                    - package: 'message-bus'
                      symfony-version: '4.4.*'
                    - package: 'serialization'
                      symfony-version: '4.4.*'
                    # Exclude it is not support on PHP 8
                    # https://github.com/php-amqplib/php-amqplib/issues/846
                    - package: 'rabbitmq-bundle-bridge'
                      php-version: '8.0'
        steps:
            -   uses: actions/checkout@v2

            -   uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php-version }}
                    coverage: none
                env:
                    COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            -   if: "matrix.package == 'rabbitmq-bundle-bridge'"
                uses: getong/rabbitmq-action@v1.2
                with:
                    rabbitmq version: '3.8.9-management-alpine'
                    host port: 5672
                    rabbitmq user: 'guest'
                    rabbitmq password: 'guest'
                    rabbitmq vhost: '/'

            -   run: composer install --no-progress --ansi

            -   run: vendor/bin/monorepo-builder localize-composer-paths packages/${{ matrix.package }}/composer.json --ansi

            -   run: bin/console rebuild-symfony-requirements ${{ matrix.package }} "${{ matrix.symfony-version }}"

            -   if: "matrix.composer-remove-arguments != ''"
                run: composer remove --no-progress --ansi --working-dir packages/${{ matrix.package }} --no-update ${{ matrix.composer-remove-arguments }}

            -   if: "matrix.dependencies == 'highest'"
                run: composer update --no-progress --ansi --working-dir packages/${{ matrix.package }} ${{ matrix.composer-update-arguments }}

            -   if: "matrix.dependencies == 'lowest'"
                run: composer update --no-progress --ansi --working-dir packages/${{ matrix.package }} --prefer-lowest ${{ matrix.composer-update-arguments }}

            -   name: Split Tests of ${{ matrix.package }}
                working-directory: packages/${{ matrix.package }}
                run: vendor/bin/phpunit
